server {
    listen       80;
    server_name  localhost;

    # Увеличиваем размер буфера для proxy
    proxy_buffer_size   128k;
    proxy_buffers       4 256k;
    proxy_busy_buffers_size 256k;

    # Включаем CORS для всех ответов сервера
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

    # Для поддержки SPA
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Добавляем заголовки для кэширования статических файлов
        add_header Cache-Control "public, max-age=3600";
    }

    # Специальный обработчик для запросов к аватарам
    location /auth/avatar/ {
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend;
        proxy_pass http://$upstream_backend:8000/auth/avatar/;
        
        # Основные заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Увеличиваем таймауты для передачи файлов
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Дополнительные настройки для передачи файлов
        proxy_buffering off;
    }

    # Проксирование запросов к статическим файлам uploads
    location /uploads/ {
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend;
        proxy_pass http://$upstream_backend:8000/uploads/;
        
        # Основные заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Настройки для кэширования статических файлов
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        
        # Отключаем буферизацию для больших файлов
        proxy_buffering off;
    }

    # Проксирование запросов к API
    location /api/ {
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend;
        proxy_pass http://$upstream_backend:8000/;
        
        # Основные заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Увеличиваем таймауты
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Проверка на preflight запросы
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Настройки для WebSocket, если необходимо
    location /ws/ {
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend;
        proxy_pass http://$upstream_backend:8000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        
        # Увеличиваем таймаут для веб-сокетов
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
} 